package com.afsal.dev.typicodapp.diimport com.afsal.dev.typicodapp.helper.Constents.BASE_URLimport com.afsal.dev.typicodapp.netWork.ApiServiceimport com.afsal.dev.typicodapp.repository.TipicoRepocitoryimport dagger.Moduleimport dagger.Providesimport dagger.hilt.InstallInimport dagger.hilt.components.SingletonComponentimport retrofit2.Retrofitimport retrofit2.converter.gson.GsonConverterFactoryimport javax.inject.Singleton@Module@InstallIn(SingletonComponent::class)object AppModule {    @Singleton    @Provides    fun provideRetrofitInstance(): Retrofit =        Retrofit.Builder()            .baseUrl(BASE_URL)            .addConverterFactory(GsonConverterFactory.create())            .build()   @Singleton   @Provides    fun provideApiService(retrofit: Retrofit):ApiService=        retrofit.create(ApiService::class.java)  //  @Singleton@Provides    fun provideRepository(apiService: ApiService)=TipicoRepocitory(apiService)}